# Generated by Django 5.2.6 on 2025-09-22 20:56

import django.db.models.deletion
import gestion_escolar.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id_categoria', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='ID Categoría')),
                ('descripcion', models.CharField(max_length=255, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ['id_categoria'],
            },
        ),
        migrations.CreateModel(
            name='Escuela',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_escuela', models.CharField(help_text='Formato: 2 dígitos + 3 letras + 4 dígitos + 1 letra (ej: 10DML0013Q)', max_length=20, unique=True, validators=[gestion_escolar.validators.validate_cct_format], verbose_name='Clave de Centro de Trabajo (CCT)')),
                ('nombre_ct', models.CharField(max_length=200, verbose_name='Nombre del Centro de Trabajo')),
                ('turno', models.CharField(choices=[('MATUTINO', 'Matutino'), ('VESPERTINO', 'Vespertino'), ('DISCONTINUO', 'Discontinuo')], max_length=20, verbose_name='Turno')),
                ('domicilio', models.TextField(verbose_name='Domicilio')),
                ('telefono_ct', models.CharField(blank=True, help_text='Formato: (000) 000-0000', max_length=20, verbose_name='Teléfono')),
                ('zona_economica', models.CharField(choices=[('II', 'II'), ('III', 'III')], max_length=3, verbose_name='Zona Económica')),
                ('region', models.CharField(max_length=100, verbose_name='Región')),
                ('u_d', models.CharField(choices=[('000', '000'), ('001', '001'), ('002', '002'), ('003', '003'), ('004', '004'), ('005', '005'), ('006', '006'), ('007', '007'), ('008', '008'), ('009', '009'), ('010', '010'), ('011', '011'), ('012', '012'), ('013', '013')], help_text='Unidad Departamental (001 al 011)', max_length=3, verbose_name='U.D.')),
                ('sostenimiento', models.CharField(choices=[('FEDERAL', 'Federal'), ('ESTATAL', 'Estatal')], max_length=10, verbose_name='Sostenimiento')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
            ],
            options={
                'verbose_name': 'Centro de Trabajo',
                'verbose_name_plural': 'Centros de Trabajo',
                'ordering': ['nombre_ct'],
            },
        ),
        migrations.CreateModel(
            name='MotivoTramite',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('motivo_tramite', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Motivo de Trámite',
                'verbose_name_plural': 'Motivos de Trámite',
                'ordering': ['motivo_tramite'],
            },
        ),
        migrations.CreateModel(
            name='PlantillaTramite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre de Plantilla')),
                ('ruta_archivo', models.CharField(max_length=255, verbose_name='Ruta del Archivo de Plantilla')),
            ],
            options={
                'verbose_name': 'Plantilla de Trámite',
                'verbose_name_plural': 'Plantillas de Trámite',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Zona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(unique=True, verbose_name='Número de Zona')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
            ],
            options={
                'verbose_name': 'Zona',
                'verbose_name_plural': 'Zonas',
                'ordering': ['numero'],
            },
        ),
        migrations.CreateModel(
            name='Maestro',
            fields=[
                ('id_maestro', models.CharField(editable=False, help_text='ID único de 5 dígitos para el personal (ej: 00001, 00002)', max_length=5, primary_key=True, serialize=False, unique=True, verbose_name='ID Maestro')),
                ('a_paterno', models.CharField(blank=True, max_length=50, null=True, verbose_name='Apellido Paterno')),
                ('a_materno', models.CharField(blank=True, max_length=50, null=True, verbose_name='Apellido Materno')),
                ('nombres', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombres')),
                ('curp', models.CharField(blank=True, max_length=18, null=True, verbose_name='CURP')),
                ('rfc', models.CharField(blank=True, max_length=13, null=True, verbose_name='RFC')),
                ('sexo', models.CharField(blank=True, choices=[('H', 'Hombre'), ('M', 'Mujer')], max_length=1, null=True, verbose_name='Sexo')),
                ('est_civil', models.CharField(blank=True, choices=[('SOLTERO', 'Soltero(a)'), ('SOLTERA', 'Soltera'), ('CASADO', 'Casado(a)'), ('CASADA', 'Casada'), ('DIVORCIADO', 'Divorciado(a)'), ('VIUDO', 'Viudo(a)'), ('UNION_LIBRE', 'Unión Libre'), ('SOLTERO(A)', 'Soltero(a)'), ('CASADO(A)', 'Casado(a)'), ('', 'No especificado')], max_length=20, null=True, verbose_name='Estado Civil')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('techo_f', models.CharField(blank=True, max_length=50, null=True, verbose_name='Techo Financiero')),
                ('dep', models.CharField(blank=True, max_length=10, null=True, verbose_name='Dependencia')),
                ('unid', models.CharField(blank=True, max_length=10, null=True, verbose_name='Unidad')),
                ('sub_unid', models.CharField(blank=True, max_length=10, null=True, verbose_name='Subunidad')),
                ('hrs', models.CharField(blank=True, max_length=10, null=True, verbose_name='Horas')),
                ('num_plaza', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número de Plaza')),
                ('codigo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Código')),
                ('fecha_ingreso', models.DateField(blank=True, null=True, verbose_name='Fecha de Ingreso')),
                ('fecha_promocion', models.DateField(blank=True, null=True, verbose_name='Fecha de Promoción')),
                ('form_academica', models.CharField(blank=True, max_length=100, null=True, verbose_name='Formación Académica')),
                ('horario', models.CharField(blank=True, max_length=100, null=True, verbose_name='Horario')),
                ('funcion', models.CharField(blank=True, choices=[('DIRECTOR', 'Director'), ('SUPERVISOR', 'Supervisor'), ('SUPERVISOR (A)', 'Supervisor(a)'), ('MAESTRO_GRUPO', 'Maestro de grupo'), ('MAESTRO_ESPECIALISTA', 'Maestro especialista'), ('DOCENTE_APOYO', 'Docente de apoyo'), ('PSICOLOGO', 'Psicólogo'), ('PSICÓLOGO(A)', 'Psicólogo(a)'), ('PSICÓLOGO (A)', 'Psicólogo(a)'), ('TRABAJADOR_SOCIAL', 'Trabajador social'), ('NIÑERO', 'Niñero'), ('NIÑERO(A)', 'Niñero(a)'), ('SECRETARIO', 'Secretario'), ('SECRETARIA ', 'Secretaria'), ('INTENDENTE', 'Intendente'), ('VELADOR', 'Velador'), ('VIGILANTE', 'Vigilante'), ('VIGILANTE ', 'Vigilante'), ('OTRO', 'Otro'), ('SUPERVISOR(A)', 'Supervisor(a)'), ('APOYO TECNICO PEDAGOGICO', 'Apoyo Técnico Pedagógico'), ('SECRETARIO(A)', 'Secretario(a)'), ('DIRECTOR (A)', 'Director(a)'), ('MAESTRO(A) DE GRUPO', 'Maestro(a) de grupo'), ('MAESTRO(A) DE GRUPO CON ESPECIALIDAD', 'Maestro(a) de grupo con especialidad'), ('MAESTRO(A) DE GRUPO ESPECIALISTA', 'Maestro(a) de grupo especialista'), ('MATRO(A) DE GRUPO ESPECIALISTA', 'Maestro(a) de grupo especialista'), ('INSTRUCTOR(A) DE TALLER', 'Instructor(a) de taller'), ('MAESTRO_DE_TALLER', 'Maestro(a) de taller'), ('MAESTRO_DE_TALLER', 'Maestro de taller'), ('MAESTRO_MUSICA', 'Maestro(a) música'), ('MAESTRO_DE_EDUCACION_FISICA', 'Maestro(a) de educación física'), ('MAESTRO_ESPECIALISTA_DOCENTE_DE_APOYO', 'Maestro(a) especialista docente de apoyo'), ('MAESTRO_ESPECIALISTA_DOCENTE_DE_APOYO', 'Maestro(a) especialista docente de apoyo'), ('MAESTRO_DE_APOYO', 'Maestro(a) de apoyo'), ('MTRA_ESPECIALISTA_DOCENTE_DE_APOYO', 'Mtra. especialista docente de apoyo'), ('MAESTRO_ESPECIALISTA_DOCENTE_DE_APOYO', 'Maestro especialista docente de apoyo'), ('TRABAJADOR_SOCIAL', 'Trabajador(a) social'), ('MEDICO', 'Médico(a)'), ('MEDICO', 'Médico(a)'), ('PROMOTOR_TIC', 'Promotor TIC'), ('PROMOTOR_TIC', 'Promotor TIC'), ('TERAPISTA_FISICO', 'Terapista Físico'), ('BIBLIOTECARIO', 'Bibliotecario(a)'), ('ADMINISTRATIVO_ESPECIALIZADO', 'Administrativo Especializado'), ('OFICIAL_DE_SERVICIOS_Y_MANTENIMIENTO', 'Oficial de Servicios y Mantenimiento'), ('OFICIAL_DE_SERVICIOS_DE_MANTENIMIENTO', 'Oficial de Servicios de Mantenimiento'), ('ASISTENTE_DE_SERVICIOS', 'Asistente de Servicios'), ('ASESOR_JURIDICO', 'Asesor Jurídico'), ('AUXILIAR_DE_GRUPO', 'Auxiliar de Grupo'), ('MAESTRO_DE_COMUNICACION', 'Maestro(a) de Comunicación'), ('MAESTRO_AULA_HOSPITALARIA', 'Maestro(a) Aula Hospitalaria'), ('', 'No especificado')], max_length=50, null=True, verbose_name='Función')),
                ('nivel_estudio', models.CharField(blank=True, choices=[('LIC', 'Licenciatura'), ('ING', 'Ingeniería'), ('MTRO', 'Maestría'), ('DOC', 'Doctorado'), ('TSU', 'Técnico Superior Universitario'), ('BACHILLER', 'Bachillerato'), ('OTRO', 'Otro'), ('Dra.', 'Dra.'), ('Profra.', 'Profra.'), ('Prof.', 'Prof.'), ('Mtra.', 'Mtra.'), ('Profr.', 'Profr.'), ('Psic.', 'Psic.'), ('', 'No especificado')], max_length=20, null=True, verbose_name='Nivel de Estudio')),
                ('domicilio_part', models.TextField(blank=True, null=True, verbose_name='Domicilio Particular')),
                ('poblacion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Población')),
                ('codigo_postal', models.CharField(blank=True, max_length=10, null=True, verbose_name='Código Postal')),
                ('telefono', models.CharField(blank=True, max_length=50, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('status', models.CharField(blank=True, choices=[('ACTIVO', 'Activo'), ('ACTIVA', 'Activa'), ('BAJA', 'Baja'), ('LICENCIA', 'Licencia'), ('JUBILADO', 'Jubilado'), ('INACTIVO', 'Inactivo'), ('', 'No especificado')], default='ACTIVO', max_length=20, null=True, verbose_name='Status')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('clave_presupuestal', models.CharField(blank=True, editable=False, max_length=50, null=True, verbose_name='Clave Presupuestal')),
                ('categog', models.ForeignKey(blank=True, help_text='Categoría presupuestal del personal', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestion_escolar.categoria', verbose_name='Categoría')),
                ('id_escuela', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gestion_escolar.escuela', verbose_name='Escuela')),
            ],
            options={
                'verbose_name': 'Personal',
                'verbose_name_plural': 'Todo el personal',
                'ordering': ['a_paterno', 'a_materno', 'nombres'],
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de Inicio')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de Fin')),
                ('acuerdo', models.CharField(blank=True, max_length=100, verbose_name='Acuerdo de Nombramiento')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('escuela', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gestion_escolar.escuela', verbose_name='Escuela')),
                ('maestro', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gestion_escolar.maestro', verbose_name='Maestro')),
            ],
            options={
                'verbose_name': 'Director',
                'verbose_name_plural': 'Directores',
                'ordering': ['escuela', 'fecha_inicio'],
            },
        ),
        migrations.AddField(
            model_name='escuela',
            name='zona_esc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_escolar.zona', verbose_name='Zona Escolar'),
        ),
        migrations.AddIndex(
            model_name='escuela',
            index=models.Index(fields=['id_escuela'], name='gestion_esc_id_escu_8cd36a_idx'),
        ),
        migrations.AddIndex(
            model_name='escuela',
            index=models.Index(fields=['zona_esc'], name='gestion_esc_zona_es_6ff57e_idx'),
        ),
        migrations.AddIndex(
            model_name='escuela',
            index=models.Index(fields=['sostenimiento'], name='gestion_esc_sosteni_7ba21c_idx'),
        ),
    ]
